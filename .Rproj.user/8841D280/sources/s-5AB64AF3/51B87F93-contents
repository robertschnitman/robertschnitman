---
title: 'ABSTRACT: The Narrator and the Noise'
author: Robert Schnitman
date: '2020-03-27'
slug: abstract-the-narrator-and-the-noise
categories:
  - R
  - Reports
  - Abstracts
tags:
  - data analysis
  - thematic analysis
  - video games
description: ''
topics: []
---
# Preface

This blog post is simply the summary of *The Narrator and the Noise*. Please read the full version at either of the following locations: 

1. *Gitbook version*: https://rs-ddlc.netlify.com/

1. *PDF version*: https://github.com/robertschnitman/RS_Reports/blob/master/DDLC/DDLC.pdf

# Abstract
The focus of this study is to determine the existence and extent of statistical bias towards any of the Doki Doki Literature Club characters with respect to the points distribution of the Poem Minigame. The results of this study show that the bias is towards Sayori (2.180 +/- 0.819 vs. overall mean of 1.962 +/- 0.839), who is the first character in the game to experience a traumatic outcome, suggesting that the statistical component of the Poem Minigame--whether intentional or not--attempts to gear the player towards her to accentuate further the emotional impact of her death in Act 1.

```{r setup, include = FALSE}
# Name libraries to use for analysis.
libs <- c('tidyverse',  # For data management.
          'magrittr',   # For data management.
          'knitr',      # For presenting tables.
          'kableExtra', # For presenting tables.
          'broom',      # For tidying models/tests.
          'gridExtra',  # For placing plots on a grid.
          'FSA')        # For Dunn's Test

# Write function for loading libraries or installing them if not available.
try_load <- function(x) { 
  
  if (!require(x, character.only = TRUE)) {
    
    install.packages(x)
    library(x, character.only = TRUE)
  
  }
  
}

# Load libraries
Map(try_load, libs)
```

```{r import, include= FALSE}
# Import Dataset 
## Saved data from the following link into a CSV: https://ddlcwiki.net/wiki/Poem_game)
data <- read.csv('ddlc.csv', stringsAsFactors = FALSE)
```

```{r pdv, echo = FALSE}
# Pivot the dataset.
data2 <- gather(data, 'Character', 'Value', 2:4)

# Create a function that sets up the background of the plot.
theme_light2 <- function() {
  
  theme_light() + 
  theme(panel.grid.minor   = element_blank(),
        panel.grid.major.x = element_blank())
  
}   

# Generate the plot.
ggplot(data2) + 
  aes(x = Value, fill = Character) + 
  geom_histogram(bins = 3, col = 'gray', alpha = 0.8) + 
  facet_wrap(~ Character) + 
  guides(fill = FALSE) + 
  labs(x     = 'Points',
       y     = 'Frequency',
       title = 'Fig. 1 - Points Distribution in the DDLC Poem Minigame') + 
  scale_x_continuous(breaks = 1:3) + 
  theme_light2()


```

```{r ctp, include = FALSE}
# Calculate the mean and SDs of the points for each character.
msd <- aggregate(Value ~ Character, 
                 data2,
                 function(x) c(Mean = round(mean(x), 3), SD = round(sd(x), 3))) %>%
  do.call(data.frame, .)

# Rename the columns.
names(msd) <- c('Character', 'Mean', 'SD')

msd %<>%
  rbind(data.frame(Character = 'Overall', 
                   Mean      = round(mean(data2$Value), 3),
                   SD        = round(sd(data2$Value), 3)))

```

```{r ctp2, echo = FALSE}
# Generate a plot of means and SDs.
ggplot(msd) + 
  aes(x = Character, y = Mean, fill = Character) + 
  geom_bar(stat = 'identity', alpha = 0.8) + 
  geom_errorbar(ymin = msd$Mean - msd$SD, 
                ymax = msd$Mean + msd$SD,
                alpha = 0.8) +
  geom_hline(yintercept = mean(msd$Mean), lty = 2) +
  ylim(0, 3) + 
  labs(x = '',
       title = 'Fig. 2 - Central Tendency of the Poem Minigame\'s 
Points Distribution by DDLC Character',
       caption = 'Note: The error bars (i.e. the "I" geometries) 
indicate the standard deviation of a specific character\'s distribution,
centered at a character\'s average number of points across the words.
Dashed line indicates the grand mean across the characters.') +
  guides(fill = FALSE) + 
  theme_light2()

```