"0","funs <- data.frame(Function = c('lapply(X, FUN)',"
"0","                                'sapply(X, FUN)',"
"0","                                'apply(X, MARGIN, FUN)',"
"0","                                'vapply(X, FUN, FUN.VALUE)',"
"0","                                'mapply(FUN, ...)',"
"0","                                'Map(f, ...)',"
"0","                                'rapply(object, f, classes)',"
"0","                                'aggregate(formula, data, FUN)'),"
"0","                   Description = c('Compute a function over data and output a list.',"
"0","                                   'Compute a function over data and output a matrix (sometimes a list, depending on the function being passed).',"
"0","                                   'Compute a function row-wise or column-wise.',"
"0","                                   'Compute a function over data and check if the output matches a pre-specified type.',"
"0","                                   'Compute a function over one or more data inputs and output an array (vector or matrix).',"
"0","                                   'Compute a function over one or more data inputs and output a list.',"
"0","                                   'Recursively compute a function over data and output a vector or list.',"
"0","                                   'Generate grouped computations and output a data frame.'),"
"0","                   Example     = c('lapply(mtcars, mean)',"
"0","                                   'sapply(mtcars, mean)',"
"0","                                   'apply(mtcars, 1, mean); apply(mtcars, 2, mean)',"
"0","                                   'vapply(mtcars, mean, numeric(1))',"
"0","                                   'mapply(rbind, mtcars\\$mpg, mtcars\\$wt)',"
"0","                                   'Map(rbind, mtcars\\$mpg, mtcars\\$wt)',"
"0","                                   'rapply(iris, mean, classes = ""numeric"")',"
"0","                                   'aggregate(mpg ~ gear, mtcars, mean)'))"
"0","#summ_funs <- summ(funs, caption = 'Summary of Functionals')"
"0","summ_funs <- flextable(funs) %>%"
"0","  set_caption(caption = 'Summary of Functionals')"
"0","summ_funs"
