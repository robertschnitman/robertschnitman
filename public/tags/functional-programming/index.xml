<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Functional Programming on Robert Schnitman</title>
    <link>/tags/functional-programming/</link>
    <description>Recent content in Functional Programming on Robert Schnitman</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Mar 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/functional-programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>New Book: A Short Introduction to Applied Statistical Programming in R</title>
      <link>/2020/03/30/bip-aspr/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/30/bip-aspr/</guid>
      <description>I have a new book in progress called A Short Introduction to Applied Statistical Programming in R, which can be viewed online as a Gitbook (https://rs-aspr.netlify.com/) or as a PDF (https://github.com/robertschnitman/aspr/blob/master/aspr.pdf). [EDIT 2020-04-01: I will primarily focus on the Gitbook version, as I am running into some typesetting issues with the PDF at the moment.]
[EDIT 2020-04-02: The Gitbook version is fairly complete and I do not foresee many major updates to it unless they are requested or if I think of anything else significant to add.</description>
    </item>
    
    <item>
      <title>Mapping Techniques to Maintain Data Frame Consistency in Base R</title>
      <link>/2020/03/24/mapping-techniques-to-maintain-data-frame-consistency-in-base-r/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/24/mapping-techniques-to-maintain-data-frame-consistency-in-base-r/</guid>
      <description>IntroductionMaintaining data frame consistency within Base R can be difficult. The library purrr1 from the tidyverse solves this problem with its map_df() function. However, we can achieve similar results and expand upon them with base R functions. To do so, two methods will be used.
Method 1: Use lapply(), data.frame(), and do.call()To replicate purrr’s map_df(), we use three functions: lapply() to apply the function to some data; data.</description>
    </item>
    
    <item>
      <title>mop(): a New Way to sweep()</title>
      <link>/2020/03/24/mop-a-new-way-to-sweep/</link>
      <pubDate>Tue, 24 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/03/24/mop-a-new-way-to-sweep/</guid>
      <description>IntroductionThis blog post will compare sweep() and a function I’ve created called mop(). I argue that the latter is preferred over the former, as it is more concise in nature.
The Old Way: sweep()The function sweep()1 allows one to process data based on a summary statistic function–for example, dividing each element by a column’s mean. A problem, however, arises: you are required to explicitly state the summary statistic value in the STATS input.</description>
    </item>
    
  </channel>
</rss>